import org.moallemi.gradle.internal.VersionCodeType

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.0'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
        classpath 'com.github.hotchemi:gradle-proguard-plugin:0.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'org.moallemi.advanced-build-version'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


advancedVersioning {
    nameOptions {
        versionMajor app.versionMajor
        versionMinor app.versionMinor
        versionPatch app.versionPatch
        versionBuild versionCode
    }
    codeOptions {
        versionCodeType VersionCodeType.AUTO_INCREMENT_ONE_STEP
        dependsOnTasks 'release', 'beta'

    }
    outputOptions {
        renameOutput true
        nameFormat 'PUBGTracker-${buildType}-${versionName}'
    }
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

if (keystorePropertiesFile.canRead()) {
// Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    throw new GradleException("Could not read keystore.properties!")
}

android {
    def appVersionCode = app.versionMajor * 10000 + app.versionMinor * 1000 + app.versionPatch * 100 + advancedVersioning.versionCode
    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    flavorDimensions "release"
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "me.calebjones.pubgtracker"
        multiDexEnabled false
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode appVersionCode
        versionName advancedVersioning.versionName
        buildConfigField "String", "GitHash", "\"${getGitHash()}\""
        manifestPlaceholders = [crashlyticsApiKey: fabric_key]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            applicationIdSuffix '.debug'
            applicationName = "Debug"
            manifestPlaceholders = [appNameLabel: "PUBG - Debug"]
            debuggable true
            versionNameSuffix "-debug-${defaultConfig.versionCode}"
            minifyEnabled true
            proguardFile 'proguard-project-app.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            applicationName = "PUBG Tracker"
            versionNameSuffix "-b${appVersionCode}"
            proguardFile 'proguard-project-app.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [appNameLabel: "PUBG Tracker"]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    productFlavors {
        debugTesting {
            minSdkVersion 21
            dimension "release"

        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 19
            dimension "release"
        }
    }
    buildToolsVersion '26.0.2'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // TESTING
    implementation "com.github.jasminb:jsonapi-converter:0.8.1"
    implementation "io.reactivex.rxjava2:rxjava:2.1.0"

    // Android Official Libraries
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.google.android.gms:play-services-location:$rootProject.playServicesVersion"
    implementation "com.google.android.gms:play-services-gcm:$rootProject.playServicesVersion"
    implementation "com.google.android.gms:play-services-ads:$rootProject.playServicesVersion"

    // Communication
//    implementation 'com.onesignal:OneSignal:3.6.5@aar'

    // Views and Animations
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.lapism:searchview:4.0'
    implementation 'com.mikepenz:iconics-core:3.0.0@aar'
    implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'
    implementation 'com.weiwangcn.betterspinner:library-material:1.1.0'
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.0.1'
    implementation 'com.mikepenz:iconics-views:2.9.3@aar'
    implementation('com.mikepenz:materialdrawer:5.9.5@aar') {
        transitive = true
    }
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'com.mikepenz:fontawesome-typeface:4.7.0.0@aar'
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
    implementation 'cz.kinst.jakub:android-stateful-layout-simple:2.0.5'
    implementation 'com.andkulikov:transitionseverywhere:1.7.7'
    implementation 'com.codemybrainsout.onboarding:onboarder:1.0.4'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation('com.afollestad.material-dialogs:core:0.9.4.7') {
        exclude module: 'support-v13'
    }
    implementation 'com.github.jrvansuita:MaterialAbout:0.1.9'


    // Networking
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    // Tools
    implementation 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'blue.aodev:material-values:1.1.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.pixplicity.easyprefs:library:1.9.0'
    implementation 'com.jonathanfinerty.once:once:1.2.2'
    testImplementation 'junit:junit:4.12'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
}

